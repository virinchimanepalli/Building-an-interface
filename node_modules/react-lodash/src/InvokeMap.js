import React from 'react'
import invokeMap from 'lodash/invokeMap'

export default function InvokeMap(props) {
  return props.children(invokeMap(props.collection, props.path, props.args))
}

InvokeMap.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.invokeMap",
  "longname": "_.invokeMap",
  "name": "invokeMap",
  "kind": "member",
  "scope": "static",
  "description": "Invokes the method at `path` of each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `path` is a function, it's invoked\nfor, and `this` bound to, each element in `collection`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "Array",
          "function",
          "string"
        ]
      },
      "description": "The path of the method to invoke or\n the function invoked per iteration.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arguments to invoke each method with.",
      "name": "args"
    }
  ],
  "examples": [
    "_.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invokeMap([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the array of results."
    }
  ],
  "since": "4.0.0",
  "category": "Collection",
  "meta": {
    "lineno": 30,
    "filename": "invokeMap.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 82
}
    */