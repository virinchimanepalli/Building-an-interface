import React from 'react'
import assign from 'lodash/assign'

export default function Assign(props) {
  return props.children(assign(props.object, props.sources))
}

Assign.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.assign",
  "longname": "_.assign",
  "name": "assign",
  "kind": "member",
  "scope": "static",
  "description": "Assigns own enumerable string keyed properties of source objects to the\ndestination object. Source objects are applied from left to right.\nSubsequent sources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object` and is loosely based on\n[`Object.assign`](https://mdn.io/Object/assign).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The destination object.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The source objects.",
      "name": "sources"
    }
  ],
  "examples": [
    "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assign({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'c': 3 }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "0.10.0",
  "category": "Object",
  "see": [
    "_.assignIn"
  ],
  "meta": {
    "lineno": 46,
    "filename": "assign.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 6
}
    */