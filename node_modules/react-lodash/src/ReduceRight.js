import React from 'react'
import reduceRight from 'lodash/reduceRight'

export default function ReduceRight(props) {
  return props.children(reduceRight(props.collection, props.iteratee, props.accumulator))
}

ReduceRight.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.reduceRight",
  "longname": "_.reduceRight",
  "name": "reduceRight",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "iteratee"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "description": "The initial value.",
      "name": "accumulator"
    }
  ],
  "examples": [
    "var array = [[0, 1], [2, 3], [4, 5]];\n\n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "Returns the accumulated value."
    }
  ],
  "since": "0.1.0",
  "category": "Collection",
  "see": [
    "_.reduce"
  ],
  "meta": {
    "lineno": 29,
    "filename": "reduceRight.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 339
}
    */