import React from 'react'
import sortBy from 'lodash/sortBy'

export default function SortBy(props) {
  return props.children(sortBy(props.collection, props.iteratees))
}

SortBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.sortBy",
  "longname": "_.sortBy",
  "name": "sortBy",
  "kind": "member",
  "scope": "static",
  "description": "Creates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection thru each iteratee. This method\nperforms a stable sort, that is, it preserves the original sort order of\nequal elements. The iteratees are invoked with one argument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function",
          "Array.<function()>"
        ]
      },
      "optional": true,
      "variable": true,
      "defaultvalue": "[_.identity]",
      "description": "The iteratees to sort by.",
      "name": "iteratees"
    }
  ],
  "examples": [
    "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.sortBy(users, [function(o) { return o.user; }]);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new sorted array."
    }
  ],
  "since": "0.1.0",
  "category": "Collection",
  "meta": {
    "lineno": 35,
    "filename": "sortBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 143
}
    */