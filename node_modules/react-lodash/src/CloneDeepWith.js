import React from 'react'
import cloneDeepWith from 'lodash/cloneDeepWith'

export default function CloneDeepWith(props) {
  return props.children(cloneDeepWith(props.value, props.customizer))
}

CloneDeepWith.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.cloneDeepWith",
  "longname": "_.cloneDeepWith",
  "name": "cloneDeepWith",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.cloneWith` except that it recursively clones `value`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to recursively clone.",
      "name": "value"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "description": "The function to customize cloning.",
      "name": "customizer"
    }
  ],
  "examples": [
    "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n}\n\nvar el = _.cloneDeepWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 20"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "Returns the deep cloned value."
    }
  ],
  "since": "4.0.0",
  "category": "Lang",
  "see": [
    "_.cloneWith"
  ],
  "meta": {
    "lineno": 35,
    "filename": "cloneDeepWith.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 202
}
    */