import React from 'react'
import spread from 'lodash/spread'

export default function Spread(props) {
  return props.children(spread(props.func, props.start))
}

Spread.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.spread",
  "longname": "_.spread",
  "name": "spread",
  "kind": "function",
  "scope": "static",
  "description": "Creates a function that invokes `func` with the `this` binding of the\ncreate function and an array of arguments much like\n[`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\n**Note:** This method is based on the\n[spread operator](https://mdn.io/spread_operator).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to spread arguments over.",
      "name": "func"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 0,
      "description": "The start position of the spread.",
      "name": "start"
    }
  ],
  "examples": [
    "var say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n\nsay(['fred', 'hello']);\n// => 'fred says hello'\n\nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n\nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new function."
    }
  ],
  "since": "3.2.0",
  "category": "Function",
  "meta": {
    "lineno": 47,
    "filename": "spread.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 149
}
    */