import React from 'react'
import remove from 'lodash/remove'

export default function Remove(props) {
  return props.children(remove(props.array, props.predicate))
}

Remove.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.remove",
  "longname": "_.remove",
  "name": "remove",
  "kind": "function",
  "scope": "static",
  "description": "Removes all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is invoked\nwith three arguments: (value, index, array).\n\n**Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\nto pull elements from an array by value.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to modify.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "predicate"
    }
  ],
  "examples": [
    "var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new array of removed elements."
    }
  ],
  "since": "2.0.0",
  "category": "Array",
  "meta": {
    "lineno": 32,
    "filename": "remove.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 133
}
    */