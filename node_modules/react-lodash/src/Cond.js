import React from 'react'
import cond from 'lodash/cond'

export default function Cond(props) {
  return props.children(cond(props.pairs))
}

Cond.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.cond",
  "longname": "_.cond",
  "name": "cond",
  "kind": "function",
  "scope": "static",
  "description": "Creates a function that iterates over `pairs` and invokes the corresponding\nfunction of the first predicate to return truthy. The predicate-function\npairs are invoked with the `this` binding and arguments of the created\nfunction.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The predicate-function pairs.",
      "name": "pairs"
    }
  ],
  "examples": [
    "var func = _.cond([\n  [_.matches({ 'a': 1 }),           _.constant('matches A')],\n  [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n  [_.stubTrue,                      _.constant('no match')]\n]);\n\nfunc({ 'a': 1, 'b': 2 });\n// => 'matches A'\n\nfunc({ 'a': 0, 'b': 1 });\n// => 'matches B'\n\nfunc({ 'a': '1', 'b': '2' });\n// => 'no match'"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new composite function."
    }
  ],
  "since": "4.0.0",
  "category": "Util",
  "meta": {
    "lineno": 38,
    "filename": "cond.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 24
}
    */