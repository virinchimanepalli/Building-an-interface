import React from 'react'
import sampleSize from 'lodash/sampleSize'

export default function SampleSize(props) {
  return props.children(sampleSize(props.collection, props.n))
}

SampleSize.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.sampleSize",
  "longname": "_.sampleSize",
  "name": "sampleSize",
  "kind": "function",
  "scope": "static",
  "description": "Gets `n` random elements at unique keys from `collection` up to the\nsize of `collection`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to sample.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 1,
      "description": "The number of elements to sample.",
      "name": "n"
    }
  ],
  "examples": [
    "_.sampleSize([1, 2, 3], 2);\n// => [3, 1]\n\n_.sampleSize([1, 2, 3], 4);\n// => [2, 3, 1]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the random elements."
    }
  ],
  "since": "4.0.0",
  "category": "Collection",
  "customTags": [
    {
      "tag": "param-",
      "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
    }
  ],
  "meta": {
    "lineno": 27,
    "filename": "sampleSize.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 138
}
    */