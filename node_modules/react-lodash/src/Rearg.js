import React from 'react'
import rearg from 'lodash/rearg'

export default function Rearg(props) {
  return props.children(rearg(props.func, props.indexes))
}

Rearg.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.rearg",
  "longname": "_.rearg",
  "name": "rearg",
  "kind": "member",
  "scope": "static",
  "description": "Creates a function that invokes `func` with arguments arranged according\nto the specified `indexes` where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to rearrange arguments for.",
      "name": "func"
    },
    {
      "type": {
        "names": [
          "number",
          "Array.<number>"
        ]
      },
      "variable": true,
      "description": "The arranged argument indexes.",
      "name": "indexes"
    }
  ],
  "examples": [
    "var rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, [2, 0, 1]);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new function."
    }
  ],
  "since": "3.0.0",
  "category": "Function",
  "meta": {
    "lineno": 29,
    "filename": "rearg.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 131
}
    */