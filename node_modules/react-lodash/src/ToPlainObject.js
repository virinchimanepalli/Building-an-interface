import React from 'react'
import toPlainObject from 'lodash/toPlainObject'

export default function ToPlainObject(props) {
  return props.children(toPlainObject(props.value))
}

ToPlainObject.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.toPlainObject",
  "longname": "_.toPlainObject",
  "name": "toPlainObject",
  "kind": "function",
  "scope": "static",
  "description": "Converts `value` to a plain object flattening inherited enumerable string\nkeyed properties of `value` to own properties of the plain object.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to convert.",
      "name": "value"
    }
  ],
  "examples": [
    "function Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns the converted plain object."
    }
  ],
  "since": "3.0.0",
  "category": "Lang",
  "meta": {
    "lineno": 28,
    "filename": "toPlainObject.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 165
}
    */