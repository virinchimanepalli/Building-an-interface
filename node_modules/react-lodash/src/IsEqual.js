import React from 'react'
import isEqual from 'lodash/isEqual'

export default function IsEqual(props) {
  const value = isEqual(props.value, props.other)
  return value ? props.yes() : props.no()
}

IsEqual.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.isEqual",
  "longname": "_.isEqual",
  "name": "isEqual",
  "kind": "function",
  "scope": "static",
  "description": "Performs a deep comparison between two values to determine if they are\nequivalent.\n\n**Note:** This method supports comparing arrays, array buffers, booleans,\ndate objects, error objects, maps, numbers, `Object` objects, regexes,\nsets, strings, symbols, and typed arrays. `Object` objects are compared\nby their own, not inherited, enumerable properties. Functions and DOM\nnodes are compared by strict equality, i.e. `===`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to compare.",
      "name": "value"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The other value to compare.",
      "name": "other"
    }
  ],
  "examples": [
    "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.isEqual(object, other);\n// => true\n\nobject === other;\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if the values are equivalent, else `false`."
    }
  ],
  "since": "0.1.0",
  "category": "Lang",
  "meta": {
    "lineno": 31,
    "filename": "isEqual.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 265
}
    */