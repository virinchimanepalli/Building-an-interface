import React from 'react'
import methodOf from 'lodash/methodOf'

export default function MethodOf(props) {
  return props.children(methodOf(props.object, props.args))
}

MethodOf.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.methodOf",
  "longname": "_.methodOf",
  "name": "methodOf",
  "kind": "member",
  "scope": "static",
  "description": "The opposite of `_.method`; this method creates a function that invokes\nthe method at a given path of `object`. Any additional arguments are\nprovided to the invoked method.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to query.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arguments to invoke the method with.",
      "name": "args"
    }
  ],
  "examples": [
    "var array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new invoker function."
    }
  ],
  "since": "3.7.0",
  "category": "Util",
  "meta": {
    "lineno": 27,
    "filename": "methodOf.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 100
}
    */