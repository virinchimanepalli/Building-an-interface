import React from 'react'
import extend from 'lodash/extend'

export default function Extend(props) {
  return props.children(extend(props.object, props.sources))
}

Extend.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.extend",
  "longname": "_.extend",
  "name": "extend",
  "kind": "member",
  "scope": "static",
  "description": "This method is like `_.assign` except that it iterates over own and\ninherited source properties.\n\n**Note:** This method mutates `object`.",
  "memberof": "_",
  "alias": "extend",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The destination object.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The source objects.",
      "name": "sources"
    }
  ],
  "examples": [
    "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assignIn({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "see": [
    "_.assign"
  ],
  "meta": {
    "lineno": 36,
    "filename": "assignIn.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 7
}
    */