import React from 'react'
import method from 'lodash/method'

export default function Method(props) {
  return props.children(method(props.path, props.args))
}

Method.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.method",
  "longname": "_.method",
  "name": "method",
  "kind": "member",
  "scope": "static",
  "description": "Creates a function that invokes the method at `path` of a given object.\nAny additional arguments are provided to the invoked method.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the method to invoke.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arguments to invoke the method with.",
      "name": "args"
    }
  ],
  "examples": [
    "var objects = [\n  { 'a': { 'b': _.constant(2) } },\n  { 'a': { 'b': _.constant(1) } }\n];\n\n_.map(objects, _.method('a.b'));\n// => [2, 1]\n\n_.map(objects, _.method(['a', 'b']));\n// => [2, 1]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new invoker function."
    }
  ],
  "since": "3.7.0",
  "category": "Util",
  "meta": {
    "lineno": 28,
    "filename": "method.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 99
}
    */