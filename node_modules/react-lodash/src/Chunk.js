import React from 'react'
import chunk from 'lodash/chunk'

export default function Chunk(props) {
  return props.children(chunk(props.array, props.size))
}

Chunk.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.chunk",
  "longname": "_.chunk",
  "name": "chunk",
  "kind": "function",
  "scope": "static",
  "description": "Creates an array of elements split into groups the length of `size`.\nIf `array` can't be split evenly, the final chunk will be the remaining\nelements.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to process.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 1,
      "description": "The length of each chunk",
      "name": "size"
    }
  ],
  "examples": [
    "_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new array of chunks."
    }
  ],
  "since": "3.0.0",
  "category": "Array",
  "customTags": [
    {
      "tag": "param-",
      "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
    }
  ],
  "meta": {
    "lineno": 30,
    "filename": "chunk.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 20
}
    */