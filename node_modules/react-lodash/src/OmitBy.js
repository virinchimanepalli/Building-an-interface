import React from 'react'
import omitBy from 'lodash/omitBy'

export default function OmitBy(props) {
  return props.children(omitBy(props.object, props.predicate))
}

OmitBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.omitBy",
  "longname": "_.omitBy",
  "name": "omitBy",
  "kind": "function",
  "scope": "static",
  "description": "The opposite of `_.pickBy`; this method creates an object composed of\nthe own and inherited enumerable string keyed properties of `object` that\n`predicate` doesn't return truthy for. The predicate is invoked with two\narguments: (value, key).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The source object.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per property.",
      "name": "predicate"
    }
  ],
  "examples": [
    "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omitBy(object, _.isNumber);\n// => { 'b': '2' }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns the new object."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "meta": {
    "lineno": 25,
    "filename": "omitBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 107
}
    */