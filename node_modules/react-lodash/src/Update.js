import React from 'react'
import update from 'lodash/update'

export default function Update(props) {
  return props.children(update(props.object, props.path, props.updater))
}

Update.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.update",
  "longname": "_.update",
  "name": "update",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.set` except that accepts `updater` to produce the\nvalue to set. Use `_.updateWith` to customize `path` creation. The `updater`\nis invoked with one argument: (value).\n\n**Note:** This method mutates `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to modify.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the property to set.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to produce the updated value.",
      "name": "updater"
    }
  ],
  "examples": [
    "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.update(object, 'a[0].b.c', function(n) { return n * n; });\nconsole.log(object.a[0].b.c);\n// => 9\n\n_.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\nconsole.log(object.x[0].y.z);\n// => 0"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "4.6.0",
  "category": "Object",
  "meta": {
    "lineno": 31,
    "filename": "update.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 177
}
    */