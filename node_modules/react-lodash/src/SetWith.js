import React from 'react'
import setWith from 'lodash/setWith'

export default function SetWith(props) {
  return props.children(setWith(props.object, props.path, props.value, props.customizer))
}

SetWith.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.setWith",
  "longname": "_.setWith",
  "name": "setWith",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.set` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to modify.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the property to set.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to set.",
      "name": "value"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "description": "The function to customize assigned values.",
      "name": "customizer"
    }
  ],
  "examples": [
    "var object = {};\n\n_.setWith(object, '[0][1]', 'a', Object);\n// => { '0': { '1': 'a' } }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "meta": {
    "lineno": 27,
    "filename": "setWith.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 140
}
    */