import React from 'react'
import isNaN from 'lodash/isNaN'

export default function IsNaN(props) {
  const value = isNaN(props.value)
  return value ? props.yes() : props.no()
}

IsNaN.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.isNaN",
  "longname": "_.isNaN",
  "name": "isNaN",
  "kind": "function",
  "scope": "static",
  "description": "Checks if `value` is `NaN`.\n\n**Note:** This method is based on\n[`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\nglobal [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n`undefined` and other non-number values.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to check.",
      "name": "value"
    }
  ],
  "examples": [
    "_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `value` is `NaN`, else `false`."
    }
  ],
  "since": "0.1.0",
  "category": "Lang",
  "meta": {
    "lineno": 31,
    "filename": "isNaN.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 278
}
    */