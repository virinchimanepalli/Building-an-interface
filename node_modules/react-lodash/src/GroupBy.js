import React from 'react'
import groupBy from 'lodash/groupBy'

export default function GroupBy(props) {
  return props.children(groupBy(props.collection, props.iteratee))
}

GroupBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.groupBy",
  "longname": "_.groupBy",
  "name": "groupBy",
  "kind": "member",
  "scope": "static",
  "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The order of grouped values\nis determined by the order they occur in `collection`. The corresponding\nvalue of each key is an array of elements responsible for generating the\nkey. The iteratee is invoked with one argument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee to transform keys.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n\n// The `_.property` iteratee shorthand.\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns the composed aggregate object."
    }
  ],
  "since": "0.1.0",
  "category": "Collection",
  "meta": {
    "lineno": 33,
    "filename": "groupBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 70
}
    */