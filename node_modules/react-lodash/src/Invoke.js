import React from 'react'
import invoke from 'lodash/invoke'

export default function Invoke(props) {
  return props.children(invoke(props.object, props.path, props.args))
}

Invoke.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.invoke",
  "longname": "_.invoke",
  "name": "invoke",
  "kind": "member",
  "scope": "static",
  "description": "Invokes the method at `path` of `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to query.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the method to invoke.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arguments to invoke the method with.",
      "name": "args"
    }
  ],
  "examples": [
    "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\n_.invoke(object, 'a[0].b.c.slice', 1, 3);\n// => [2, 3]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "Returns the result of the invoked method."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "meta": {
    "lineno": 22,
    "filename": "invoke.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 243
}
    */