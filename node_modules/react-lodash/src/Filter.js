import React from 'react'
import filter from 'lodash/filter'

export default function Filter(props) {
  return props.children(filter(props.collection, props.predicate))
}

Filter.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.filter",
  "longname": "_.filter",
  "name": "filter",
  "kind": "function",
  "scope": "static",
  "description": "Iterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).\n\n**Note:** Unlike `_.remove`, this method returns a new array.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "predicate"
    }
  ],
  "examples": [
    "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.filter(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, { 'age': 36, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.filter(users, 'active');\n// => objects for ['barney']"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new filtered array."
    }
  ],
  "since": "0.1.0",
  "category": "Collection",
  "see": [
    "_.reject"
  ],
  "meta": {
    "lineno": 43,
    "filename": "filter.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 52
}
    */