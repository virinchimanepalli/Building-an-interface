import React from 'react'
import pullAllBy from 'lodash/pullAllBy'

export default function PullAllBy(props) {
  return props.children(pullAllBy(props.array, props.values, props.iteratee))
}

PullAllBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.pullAllBy",
  "longname": "_.pullAllBy",
  "name": "pullAllBy",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.pullAll` except that it accepts `iteratee` which is\ninvoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The iteratee is invoked with one argument: (value).\n\n**Note:** Unlike `_.differenceBy`, this method mutates `array`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to modify.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The values to remove.",
      "name": "values"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee invoked per element.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\n_.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\nconsole.log(array);\n// => [{ 'x': 2 }]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns `array`."
    }
  ],
  "since": "4.0.0",
  "category": "Array",
  "meta": {
    "lineno": 27,
    "filename": "pullAllBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 125
}
    */