import React from 'react'
import isMatch from 'lodash/isMatch'

export default function IsMatch(props) {
  const value = isMatch(props.object, props.source)
  return value ? props.yes() : props.no()
}

IsMatch.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.isMatch",
  "longname": "_.isMatch",
  "name": "isMatch",
  "kind": "function",
  "scope": "static",
  "description": "Performs a partial deep comparison between `object` and `source` to\ndetermine if `object` contains equivalent property values.\n\n**Note:** This method is equivalent to `_.matches` when `source` is\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to inspect.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object of property values to match.",
      "name": "source"
    }
  ],
  "examples": [
    "var object = { 'a': 1, 'b': 2 };\n\n_.isMatch(object, { 'b': 2 });\n// => true\n\n_.isMatch(object, { 'b': 1 });\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `object` is a match, else `false`."
    }
  ],
  "since": "3.0.0",
  "category": "Lang",
  "meta": {
    "lineno": 32,
    "filename": "isMatch.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 276
}
    */