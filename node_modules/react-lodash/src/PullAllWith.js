import React from 'react'
import pullAllWith from 'lodash/pullAllWith'

export default function PullAllWith(props) {
  return props.children(pullAllWith(props.array, props.values, props.comparator))
}

PullAllWith.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.pullAllWith",
  "longname": "_.pullAllWith",
  "name": "pullAllWith",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.pullAll` except that it accepts `comparator` which\nis invoked to compare elements of `array` to `values`. The comparator is\ninvoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.differenceWith`, this method mutates `array`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to modify.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The values to remove.",
      "name": "values"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "description": "The comparator invoked per element.",
      "name": "comparator"
    }
  ],
  "examples": [
    "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\n_.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\nconsole.log(array);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns `array`."
    }
  ],
  "since": "4.6.0",
  "category": "Array",
  "meta": {
    "lineno": 26,
    "filename": "pullAllWith.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 126
}
    */