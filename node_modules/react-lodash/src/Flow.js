import React from 'react'
import flow from 'lodash/flow'

export default function Flow(props) {
  return props.children(flow(props.funcs))
}

Flow.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.flow",
  "longname": "_.flow",
  "name": "flow",
  "kind": "member",
  "scope": "static",
  "description": "Creates a function that returns the result of invoking the given functions\nwith the `this` binding of the created function, where each successive\ninvocation is supplied the return value of the previous.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function",
          "Array.<function()>"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The functions to invoke.",
      "name": "funcs"
    }
  ],
  "examples": [
    "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow([_.add, square]);\naddSquare(1, 2);\n// => 9"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new composite function."
    }
  ],
  "since": "3.0.0",
  "category": "Util",
  "see": [
    "_.flowRight"
  ],
  "meta": {
    "lineno": 25,
    "filename": "flow.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 63
}
    */