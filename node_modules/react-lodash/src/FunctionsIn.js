import React from 'react'
import functionsIn from 'lodash/functionsIn'

export default function FunctionsIn(props) {
  return props.children(functionsIn(props.object))
}

FunctionsIn.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.functionsIn",
  "longname": "_.functionsIn",
  "name": "functionsIn",
  "kind": "function",
  "scope": "static",
  "description": "Creates an array of function property names from own and inherited\nenumerable properties of `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to inspect.",
      "name": "object"
    }
  ],
  "examples": [
    "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functionsIn(new Foo);\n// => ['a', 'b', 'c']"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the function names."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "see": [
    "_.functions"
  ],
  "meta": {
    "lineno": 27,
    "filename": "functionsIn.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 67
}
    */