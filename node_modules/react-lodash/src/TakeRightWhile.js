import React from 'react'
import takeRightWhile from 'lodash/takeRightWhile'

export default function TakeRightWhile(props) {
  return props.children(takeRightWhile(props.array, props.predicate))
}

TakeRightWhile.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.takeRightWhile",
  "longname": "_.takeRightWhile",
  "name": "takeRightWhile",
  "kind": "function",
  "scope": "static",
  "description": "Creates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to query.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "predicate"
    }
  ],
  "examples": [
    "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.takeRightWhile(users, function(o) { return !o.active; });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeRightWhile(users, ['active', false]);\n// => objects for ['fred', 'pebbles']\n\n// The `_.property` iteratee shorthand.\n_.takeRightWhile(users, 'active');\n// => []"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the slice of `array`."
    }
  ],
  "since": "3.0.0",
  "category": "Array",
  "meta": {
    "lineno": 39,
    "filename": "takeRightWhile.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 153
}
    */