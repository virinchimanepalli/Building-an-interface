import React from 'react'
import curryRight from 'lodash/curryRight'

export default function CurryRight(props) {
  return props.children(curryRight(props.func, props.arity))
}

CurryRight.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.curryRight",
  "longname": "_.curryRight",
  "name": "curryRight",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to curry.",
      "name": "func"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": "func.length",
      "description": "The arity of `func`.",
      "name": "arity"
    }
  ],
  "examples": [
    "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(3)(1, _)(2);\n// => [1, 2, 3]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new curried function."
    }
  ],
  "since": "3.0.0",
  "category": "Function",
  "customTags": [
    {
      "tag": "param-",
      "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
    }
  ],
  "meta": {
    "lineno": 44,
    "filename": "curryRight.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 35
}
    */