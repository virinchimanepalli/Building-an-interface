import React from 'react'
import findLastKey from 'lodash/findLastKey'

export default function FindLastKey(props) {
  return props.children(findLastKey(props.object, props.predicate))
}

FindLastKey.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.findLastKey",
  "longname": "_.findLastKey",
  "name": "findLastKey",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to inspect.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "predicate"
    }
  ],
  "examples": [
    "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(o) { return o.age < 40; });\n// => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findLastKey(users, 'active');\n// => 'pebbles'"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "string",
          "undefined"
        ]
      },
      "description": "Returns the key of the matched element,\n else `undefined`."
    }
  ],
  "since": "2.0.0",
  "category": "Object",
  "meta": {
    "lineno": 40,
    "filename": "findLastKey.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 225
}
    */