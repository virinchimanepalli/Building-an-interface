import React from 'react'
import once from 'lodash/once'

export default function Once(props) {
  return props.children(once(props.func))
}

Once.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.once",
  "longname": "_.once",
  "name": "once",
  "kind": "function",
  "scope": "static",
  "description": "Creates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first invocation. The `func` is\ninvoked with the `this` binding and arguments of the created function.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to restrict.",
      "name": "func"
    }
  ],
  "examples": [
    "var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new restricted function."
    }
  ],
  "since": "0.1.0",
  "category": "Function",
  "meta": {
    "lineno": 21,
    "filename": "once.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 108
}
    */