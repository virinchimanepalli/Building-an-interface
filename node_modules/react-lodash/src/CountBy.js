import React from 'react'
import countBy from 'lodash/countBy'

export default function CountBy(props) {
  return props.children(countBy(props.collection, props.iteratee))
}

CountBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.countBy",
  "longname": "_.countBy",
  "name": "countBy",
  "kind": "member",
  "scope": "static",
  "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the number of times the key was returned by `iteratee`. The\niteratee is invoked with one argument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee to transform keys.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.countBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': 1, '6': 2 }\n\n// The `_.property` iteratee shorthand.\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns the composed aggregate object."
    }
  ],
  "since": "0.5.0",
  "category": "Collection",
  "meta": {
    "lineno": 32,
    "filename": "countBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 30
}
    */