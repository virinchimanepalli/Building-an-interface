import React from 'react'
import sortedIndexBy from 'lodash/sortedIndexBy'

export default function SortedIndexBy(props) {
  return props.children(sortedIndexBy(props.array, props.value, props.iteratee))
}

SortedIndexBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.sortedIndexBy",
  "longname": "_.sortedIndexBy",
  "name": "sortedIndexBy",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.sortedIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The sorted array to inspect.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to evaluate.",
      "name": "value"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee invoked per element.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.sortedIndexBy(objects, { 'x': 4 }, 'x');\n// => 0"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "description": "Returns the index at which `value` should be inserted\n into `array`."
    }
  ],
  "since": "4.0.0",
  "category": "Array",
  "meta": {
    "lineno": 29,
    "filename": "sortedIndexBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 350
}
    */