import React from 'react'
import xorBy from 'lodash/xorBy'

export default function XorBy(props) {
  return props.children(xorBy(props.arrays, props.iteratee))
}

XorBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.xorBy",
  "longname": "_.xorBy",
  "name": "xorBy",
  "kind": "member",
  "scope": "static",
  "description": "This method is like `_.xor` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich by which they're compared. The order of result values is determined\nby the order they occur in the arrays. The iteratee is invoked with one\nargument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arrays to inspect.",
      "name": "arrays"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee invoked per element.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2, 3.4]\n\n// The `_.property` iteratee shorthand.\n_.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 2 }]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new array of filtered values."
    }
  ],
  "since": "4.0.0",
  "category": "Array",
  "meta": {
    "lineno": 31,
    "filename": "xorBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 185
}
    */