import React from 'react'
import slice from 'lodash/slice'

export default function Slice(props) {
  return props.children(slice(props.array, props.start, props.end))
}

Slice.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.slice",
  "longname": "_.slice",
  "name": "slice",
  "kind": "function",
  "scope": "static",
  "description": "Creates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of\n[`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\nreturned.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to slice.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 0,
      "description": "The start position.",
      "name": "start"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": "array.length",
      "description": "The end position.",
      "name": "end"
    }
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the slice of `array`."
    }
  ],
  "since": "3.0.0",
  "category": "Array",
  "meta": {
    "lineno": 21,
    "filename": "slice.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 142
}
    */