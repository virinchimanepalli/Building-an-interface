import React from 'react'
import replace from 'lodash/replace'

export default function Replace(props) {
  return props.children(replace(props.string, props.pattern, props.replacement))
}

Replace.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.replace",
  "longname": "_.replace",
  "name": "replace",
  "kind": "function",
  "scope": "static",
  "description": "Replaces matches for `pattern` in `string` with `replacement`.\n\n**Note:** This method is based on\n[`String#replace`](https://mdn.io/String/replace).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "string"
        ]
      },
      "optional": true,
      "defaultvalue": "''",
      "description": "The string to modify.",
      "name": "string"
    },
    {
      "type": {
        "names": [
          "RegExp",
          "string"
        ]
      },
      "description": "The pattern to replace.",
      "name": "pattern"
    },
    {
      "type": {
        "names": [
          "function",
          "string"
        ]
      },
      "description": "The match replacement.",
      "name": "replacement"
    }
  ],
  "examples": [
    "_.replace('Hi Fred', 'Fred', 'Barney');\n// => 'Hi Barney'"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "string"
        ]
      },
      "description": "Returns the modified string."
    }
  ],
  "since": "4.0.0",
  "category": "String",
  "meta": {
    "lineno": 22,
    "filename": "replace.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 341
}
    */