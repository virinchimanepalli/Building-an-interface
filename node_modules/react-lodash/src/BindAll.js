import React from 'react'
import bindAll from 'lodash/bindAll'

export default function BindAll(props) {
  return props.children(bindAll(props.object, props.methodNames))
}

BindAll.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.bindAll",
  "longname": "_.bindAll",
  "name": "bindAll",
  "kind": "member",
  "scope": "static",
  "description": "Binds methods of an object to the object itself, overwriting the existing\nmethod.\n\n**Note:** This method doesn't set the \"length\" property of bound functions.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to bind and assign the bound methods to.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "string",
          "Array.<string>"
        ]
      },
      "variable": true,
      "description": "The object method names to bind.",
      "name": "methodNames"
    }
  ],
  "examples": [
    "var view = {\n  'label': 'docs',\n  'click': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n\n_.bindAll(view, ['click']);\njQuery(element).on('click', view.click);\n// => Logs 'clicked docs' when clicked."
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "0.1.0",
  "category": "Util",
  "meta": {
    "lineno": 33,
    "filename": "bindAll.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 15
}
    */