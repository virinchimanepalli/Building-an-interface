import React from 'react'
import differenceBy from 'lodash/differenceBy'

export default function DifferenceBy(props) {
  return props.children(differenceBy(props.array, props.values, props.iteratee))
}

DifferenceBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.differenceBy",
  "longname": "_.differenceBy",
  "name": "differenceBy",
  "kind": "member",
  "scope": "static",
  "description": "This method is like `_.difference` except that it accepts `iteratee` which\nis invoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).\n\n**Note:** Unlike `_.pullAllBy`, this method returns a new array.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to inspect.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The values to exclude.",
      "name": "values"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee invoked per element.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2]\n\n// The `_.property` iteratee shorthand.\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n// => [{ 'x': 2 }]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new array of filtered values."
    }
  ],
  "since": "4.0.0",
  "category": "Array",
  "meta": {
    "lineno": 34,
    "filename": "differenceBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 45
}
    */