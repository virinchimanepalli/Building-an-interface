import React from 'react'
import result from 'lodash/result'

export default function Result(props) {
  return props.children(result(props.object, props.path, props.defaultValue))
}

Result.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.result",
  "longname": "_.result",
  "name": "result",
  "kind": "function",
  "scope": "static",
  "description": "This method is like `_.get` except that if the resolved value is a\nfunction it's invoked with the `this` binding of its parent object and\nits result is returned.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to query.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the property to resolve.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "optional": true,
      "description": "The value returned for `undefined` resolved values.",
      "name": "defaultValue"
    }
  ],
  "examples": [
    "var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\n_.result(object, 'a[0].b.c1');\n// => 3\n\n_.result(object, 'a[0].b.c2');\n// => 4\n\n_.result(object, 'a[0].b.c3', 'default');\n// => 'default'\n\n_.result(object, 'a[0].b.c3', _.constant('default'));\n// => 'default'"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "Returns the resolved value."
    }
  ],
  "since": "0.1.0",
  "category": "Object",
  "meta": {
    "lineno": 34,
    "filename": "result.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 342
}
    */