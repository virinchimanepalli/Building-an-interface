import React from 'react'
import fill from 'lodash/fill'

export default function Fill(props) {
  return props.children(fill(props.array, props.value, props.start, props.end))
}

Fill.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.fill",
  "longname": "_.fill",
  "name": "fill",
  "kind": "function",
  "scope": "static",
  "description": "Fills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to fill.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to fill `array` with.",
      "name": "value"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 0,
      "description": "The start position.",
      "name": "start"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": "array.length",
      "description": "The end position.",
      "name": "end"
    }
  ],
  "examples": [
    "var array = [1, 2, 3];\n\n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n\n_.fill(Array(3), 2);\n// => [2, 2, 2]\n\n_.fill([4, 6, 8, 10], '*', 1, 3);\n// => [4, '*', '*', 10]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns `array`."
    }
  ],
  "since": "3.2.0",
  "category": "Array",
  "meta": {
    "lineno": 33,
    "filename": "fill.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 51
}
    */