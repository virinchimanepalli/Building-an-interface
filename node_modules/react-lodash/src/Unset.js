import React from 'react'
import unset from 'lodash/unset'

export default function Unset(props) {
  const value = unset(props.object, props.path)
  return value ? props.yes() : props.no()
}

Unset.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.unset",
  "longname": "_.unset",
  "name": "unset",
  "kind": "function",
  "scope": "static",
  "description": "Removes the property at `path` of `object`.\n\n**Note:** This method mutates `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to modify.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the property to unset.",
      "name": "path"
    }
  ],
  "examples": [
    "var object = { 'a': [{ 'b': { 'c': 7 } }] };\n_.unset(object, 'a[0].b.c');\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\n_.unset(object, ['a', '0', 'b', 'c']);\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if the property is deleted, else `false`."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "meta": {
    "lineno": 30,
    "filename": "unset.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 174
}
    */