import React from 'react'
import hasIn from 'lodash/hasIn'

export default function HasIn(props) {
  const value = hasIn(props.object, props.path)
  return value ? props.yes() : props.no()
}

HasIn.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.hasIn",
  "longname": "_.hasIn",
  "name": "hasIn",
  "kind": "function",
  "scope": "static",
  "description": "Checks if `path` is a direct or inherited property of `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to query.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path to check.",
      "name": "path"
    }
  ],
  "examples": [
    "var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.hasIn(object, 'a');\n// => true\n\n_.hasIn(object, 'a.b');\n// => true\n\n_.hasIn(object, ['a', 'b']);\n// => true\n\n_.hasIn(object, 'b');\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `path` exists, else `false`."
    }
  ],
  "since": "4.0.0",
  "category": "Object",
  "meta": {
    "lineno": 30,
    "filename": "hasIn.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 237
}
    */