import React from 'react'
import curry from 'lodash/curry'

export default function Curry(props) {
  return props.children(curry(props.func, props.arity))
}

Curry.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.curry",
  "longname": "_.curry",
  "name": "curry",
  "kind": "function",
  "scope": "static",
  "description": "Creates a function that accepts arguments of `func` and either invokes\n`func` returning its result, if at least `arity` number of arguments have\nbeen provided, or returns a function that accepts the remaining `func`\narguments, and so on. The arity of `func` may be specified if `func.length`\nis not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "The function to curry.",
      "name": "func"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": "func.length",
      "description": "The arity of `func`.",
      "name": "arity"
    }
  ],
  "examples": [
    "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "description": "Returns the new curried function."
    }
  ],
  "since": "2.0.0",
  "category": "Function",
  "customTags": [
    {
      "tag": "param-",
      "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
    }
  ],
  "meta": {
    "lineno": 47,
    "filename": "curry.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 33
}
    */