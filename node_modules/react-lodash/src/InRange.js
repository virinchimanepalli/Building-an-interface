import React from 'react'
import inRange from 'lodash/inRange'

export default function InRange(props) {
  const value = inRange(props.number, props.start, props.end)
  return value ? props.yes() : props.no()
}

InRange.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.inRange",
  "longname": "_.inRange",
  "name": "inRange",
  "kind": "function",
  "scope": "static",
  "description": "Checks if `n` is between `start` and up to, but not including, `end`. If\n`end` is not specified, it's set to `start` with `start` then set to `0`.\nIf `start` is greater than `end` the params are swapped to support\nnegative ranges.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "description": "The number to check.",
      "name": "number"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 0,
      "description": "The start of the range.",
      "name": "start"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "description": "The end of the range.",
      "name": "end"
    }
  ],
  "examples": [
    "_.inRange(3, 2, 4);\n// => true\n\n_.inRange(4, 8);\n// => true\n\n_.inRange(4, 2);\n// => false\n\n_.inRange(2, 2);\n// => false\n\n_.inRange(1.2, 2);\n// => true\n\n_.inRange(5.2, 4);\n// => false\n\n_.inRange(-3, -2, -6);\n// => true"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `number` is in the range, else `false`."
    }
  ],
  "since": "3.3.0",
  "category": "Number",
  "see": [
    "_.range, _.rangeRight"
  ],
  "meta": {
    "lineno": 43,
    "filename": "inRange.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 242
}
    */