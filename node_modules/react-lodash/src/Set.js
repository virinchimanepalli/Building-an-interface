import React from 'react'
import set from 'lodash/set'

export default function Set(props) {
  return props.children(set(props.object, props.path, props.value))
}

Set.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.set",
  "longname": "_.set",
  "name": "set",
  "kind": "function",
  "scope": "static",
  "description": "Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\nit's created. Arrays are created for missing index properties while objects\nare created for all other missing properties. Use `_.setWith` to customize\n`path` creation.\n\n**Note:** This method mutates `object`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to modify.",
      "name": "object"
    },
    {
      "type": {
        "names": [
          "Array",
          "string"
        ]
      },
      "description": "The path of the property to set.",
      "name": "path"
    },
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to set.",
      "name": "value"
    }
  ],
  "examples": [
    "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n\n_.set(object, ['x', '0', 'y', 'z'], 5);\nconsole.log(object.x[0].y.z);\n// => 5"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns `object`."
    }
  ],
  "since": "3.7.0",
  "category": "Object",
  "meta": {
    "lineno": 31,
    "filename": "set.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 139
}
    */