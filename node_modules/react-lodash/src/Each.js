import React from 'react'
import each from 'lodash/each'

export default function Each(props) {
  return props.children(each(props.collection, props.iteratee))
}

Each.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.each",
  "longname": "_.each",
  "name": "each",
  "kind": "function",
  "scope": "static",
  "description": "Iterates over elements of `collection` and invokes `iteratee` for each element.\nThe iteratee is invoked with three arguments: (value, index|key, collection).\nIteratee functions may exit iteration early by explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\"\nproperty are iterated like arrays. To avoid this behavior use `_.forIn`\nor `_.forOwn` for object iteration.",
  "memberof": "_",
  "alias": "each",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function invoked per iteration.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.forEach([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `1` then `2`.\n\n_.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed)."
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "Returns `collection`."
    }
  ],
  "since": "0.1.0",
  "category": "Collection",
  "see": [
    "_.forEachRight"
  ],
  "meta": {
    "lineno": 36,
    "filename": "forEach.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 227
}
    */