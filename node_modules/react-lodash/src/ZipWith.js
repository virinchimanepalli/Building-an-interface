import React from 'react'
import zipWith from 'lodash/zipWith'

export default function ZipWith(props) {
  return props.children(zipWith(props.arrays, props.iteratee))
}

ZipWith.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.zipWith",
  "longname": "_.zipWith",
  "name": "zipWith",
  "kind": "member",
  "scope": "static",
  "description": "This method is like `_.zip` except that it accepts `iteratee` to specify\nhow grouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "optional": true,
      "variable": true,
      "description": "The arrays to process.",
      "name": "arrays"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The function to combine\n grouped values.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "_.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n  return a + b + c;\n});\n// => [111, 222]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new array of grouped elements."
    }
  ],
  "since": "3.8.0",
  "category": "Array",
  "meta": {
    "lineno": 24,
    "filename": "zipWith.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 190
}
    */