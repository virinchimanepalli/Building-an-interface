import React from 'react'
import flattenDepth from 'lodash/flattenDepth'

export default function FlattenDepth(props) {
  return props.children(flattenDepth(props.array, props.depth))
}

FlattenDepth.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.flattenDepth",
  "longname": "_.flattenDepth",
  "name": "flattenDepth",
  "kind": "function",
  "scope": "static",
  "description": "Recursively flatten `array` up to `depth` times.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "The array to flatten.",
      "name": "array"
    },
    {
      "type": {
        "names": [
          "number"
        ]
      },
      "optional": true,
      "defaultvalue": 1,
      "description": "The maximum recursion depth.",
      "name": "depth"
    }
  ],
  "examples": [
    "var array = [1, [2, [3, [4]], 5]];\n\n_.flattenDepth(array, 1);\n// => [1, 2, [3, [4]], 5]\n\n_.flattenDepth(array, 2);\n// => [1, 2, 3, [4], 5]"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the new flattened array."
    }
  ],
  "since": "4.4.0",
  "category": "Array",
  "meta": {
    "lineno": 24,
    "filename": "flattenDepth.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 60
}
    */