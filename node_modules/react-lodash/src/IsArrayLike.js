import React from 'react'
import isArrayLike from 'lodash/isArrayLike'

export default function IsArrayLike(props) {
  const value = isArrayLike(props.value)
  return value ? props.yes() : props.no()
}

IsArrayLike.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.isArrayLike",
  "longname": "_.isArrayLike",
  "name": "isArrayLike",
  "kind": "function",
  "scope": "static",
  "description": "Checks if `value` is array-like. A value is considered array-like if it's\nnot a function and has a `value.length` that's an integer greater than or\nequal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to check.",
      "name": "value"
    }
  ],
  "examples": [
    "_.isArrayLike([1, 2, 3]);\n// => true\n\n_.isArrayLike(document.body.children);\n// => true\n\n_.isArrayLike('abc');\n// => true\n\n_.isArrayLike(_.noop);\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `value` is array-like, else `false`."
    }
  ],
  "since": "4.0.0",
  "category": "Lang",
  "meta": {
    "lineno": 29,
    "filename": "isArrayLike.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 250
}
    */