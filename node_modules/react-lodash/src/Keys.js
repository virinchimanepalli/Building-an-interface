import React from 'react'
import keys from 'lodash/keys'

export default function Keys(props) {
  return props.children(keys(props.object))
}

Keys.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.keys",
  "longname": "_.keys",
  "name": "keys",
  "kind": "function",
  "scope": "static",
  "description": "Creates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\nfor more details.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "The object to query.",
      "name": "object"
    }
  ],
  "examples": [
    "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Array"
        ]
      },
      "description": "Returns the array of property names."
    }
  ],
  "since": "0.1.0",
  "category": "Object",
  "meta": {
    "lineno": 33,
    "filename": "keys.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 86
}
    */