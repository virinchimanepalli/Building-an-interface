import React from 'react'
import isEmpty from 'lodash/isEmpty'

export default function IsEmpty(props) {
  const value = isEmpty(props.value)
  return value ? props.yes() : props.no()
}

IsEmpty.defaultProps = {
  yes: () => {},
  no: () => {}
}
  
    /* Used for debugging
    {
  "id": "_.isEmpty",
  "longname": "_.isEmpty",
  "name": "isEmpty",
  "kind": "function",
  "scope": "static",
  "description": "Checks if `value` is an empty object, collection, map, or set.\n\nObjects are considered empty if they have no own enumerable string keyed\nproperties.\n\nArray-like values such as `arguments` objects, arrays, buffers, strings, or\njQuery-like collections are considered empty if they have a `length` of `0`.\nSimilarly, maps and sets are considered empty if they have a `size` of `0`.",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "*"
        ]
      },
      "description": "The value to check.",
      "name": "value"
    }
  ],
  "examples": [
    "_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "boolean"
        ]
      },
      "description": "Returns `true` if `value` is empty, else `false`."
    }
  ],
  "since": "0.1.0",
  "category": "Lang",
  "meta": {
    "lineno": 53,
    "filename": "isEmpty.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 264
}
    */