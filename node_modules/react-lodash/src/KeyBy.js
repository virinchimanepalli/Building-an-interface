import React from 'react'
import keyBy from 'lodash/keyBy'

export default function KeyBy(props) {
  return props.children(keyBy(props.collection, props.iteratee))
}

KeyBy.defaultProps = {
  children: value => value
}
  
    /* Used for debugging
    {
  "id": "_.keyBy",
  "longname": "_.keyBy",
  "name": "keyBy",
  "kind": "member",
  "scope": "static",
  "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the last element responsible for generating the key. The\niteratee is invoked with one argument: (value).",
  "memberof": "_",
  "params": [
    {
      "type": {
        "names": [
          "Array",
          "Object"
        ]
      },
      "description": "The collection to iterate over.",
      "name": "collection"
    },
    {
      "type": {
        "names": [
          "function"
        ]
      },
      "optional": true,
      "defaultvalue": "_.identity",
      "description": "The iteratee to transform keys.",
      "name": "iteratee"
    }
  ],
  "examples": [
    "var array = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.keyBy(array, function(o) {\n  return String.fromCharCode(o.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.keyBy(array, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }"
  ],
  "returns": [
    {
      "type": {
        "names": [
          "Object"
        ]
      },
      "description": "Returns the composed aggregate object."
    }
  ],
  "since": "4.0.0",
  "category": "Collection",
  "meta": {
    "lineno": 32,
    "filename": "keyBy.js",
    "path": "D:\\code\\react-lodash\\node_modules\\lodash"
  },
  "order": 85
}
    */